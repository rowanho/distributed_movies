# saved as greeting-client.py
import Pyro4

#returns True or False based on whether user says they have an id or not
def ask_has_id():
    valid = False
    has_id = False
    while not valid:
        inp = input("Do you have a user id? y/n: ")
        if inp in ["y","Y","yes","Yes"]:
            valid = True
            has_id = True
        elif inp in ["n","N","no","No"]:
            valid = True
    return has_id

#returns the user id, either input or generated by the distributed system
def ask_user_id(has_id):
    valid = False
    while not valid:
        if ask_has_id():
            user_id_input = input("What is your user id? ")
            try:
                user_id = int(user_id_input)
            except:
                print("Not a valid user id format")
#returns a float divisble by 0.5 - the rating of a movie
def ask_update_movie_rating():
    valid = False
    while not valid:
        input_movie_rating = input("Enter your rating: ")
        try:
            movie_rating = float(input_movie_rating)
            if movie_rating >= 0.5 and movie_rating <= 5.0:
                if (movie_rating *  2).is_integer():
                    valid = True
        except:
            print("Please enter a valid rating")
        if not valid:
            print("Please enter a valid rating")
    return movie_rating
def add_movie_rating(movie_updates):
    movie_name = input("Enter the name of the movie to update")
    movie_rating = ask_update_movie_rating()
    print("Adding rating %f for movie name %s..."%(movie_rating,movie_name))
    # actually call the remote functions here
def ask_get_movie_rating(movie_queries):
    mn_input = input("Enter the name of the movie to obtain the rating for: ")
    rating = movie_queries.get_overall_rating(mn_input)
    print(rating)
    # actually call the remote functions here
def main():
    movie_updates = Pyro4.Proxy("PYRONAME:frontend.movie.updates")    # use name server object lookup uri shortcut
    movie_queries = Pyro4.Proxy("PYRONAME:frontend.movie.queries")
    movie_name = ask_get_movie_rating(movie_queries)
if __name__ == "__main__":
    main()
